"0","risk_imp_stoch <- risk_MAR "
"0","#BMI: Stochastic Imputation "
"0","Ry <- as.numeric(!is.na(risk_MAR$bmi))# Missing data indicator"
"0","bmi_miss <- risk_MAR[Ry == 0 , ] #Subset rows with missing BMI values"
"0","df_cc <- risk_MAR[complete.cases(risk_MAR) , ] #Subset complete cases (cc)"
"0","mod_reg_imp <- lm(bmi ~ age + health_good + health_cover, data = df_cc) #Run model on cc data"
"0","bmi_imp <- predict(mod_reg_imp, newdata = bmi_miss) #Use model to predict missing BMI values"
"0","noise  <- rnorm(length(bmi_imp), 0, summary(mod_reg_imp)$sigma) #Generate noise"
"0","bmi_imp_stoch <- bmi_imp + noise #Combine predictions with noise"
"0","risk_imp_stoch$bmi[Ry ==0] <- bmi_imp_stoch  #Replace missing values"
"0","#HEALTH INSURANCE COVERAGE: Stochastic Imputation "
"0","Ry <- as.numeric(!is.na(risk_MAR$health_cover)) # Missing data indicator"
"0","health_cover_miss <- risk_MAR[Ry == 0 , ] #Subset rows with missing HEALTH_COVER values"
"0","health_cover_mod <- glm(health_cover ~ age + bmi + health_good, "
"0","                        data = df_cc,"
"0","                        family = binomial(link = 'logit')) #Fit model on cc data"
"0","health_cover_probs <- predict(health_cover_mod, "
"0","                              newdata = health_cover_miss,"
"0","                              type = 'response') #Predict Probability for missing data"
"0","heath_cover_imp_stoch <-  rbinom(n = length(health_cover_probs), "
"0","                            size = 1,"
"0","                            prob = health_cover_probs) #Draw from binomial distribution"
"0","risk_imp_stoch$health_cover[Ry == 0] <- heath_cover_imp_stoch  #Replace missing values"
"0","#GOOD HEALTH: Stochastic Imputation "
"0","Ry <- as.numeric(!is.na(risk_MAR$health_good)) # Missing data indicator"
"0","health_good_miss <- risk_MAR[Ry == 0 , ] #Subset rows with missing HEALTH_COVER values"
"0","health_good_mod <- glm(health_good ~ age + bmi + health_cover, "
"0","                        data = df_cc,"
"0","                        family = binomial(link = 'logit')) #Fit model on cc data"
"0","health_good_probs <- predict(health_good_mod, "
"0","                              newdata = health_good_miss,"
"0","                              type = 'response') #Predict Probability for missing data"
"0","heath_good_imp_stoch <-  rbinom(n = length(health_good_probs), "
"0","                            size = 1,"
"0","                            prob = health_good_probs) #Draw from binomial distribution"
"0","risk_imp_stoch$health_good[Ry == 0] <- heath_good_imp_stoch  #Replace missing COVER values"
"0","#Perform Analysis"
"0","fit_imp_stoch <- glm(health_good ~ health_cover +bmi + age, "
"0","                         data = risk_imp_stoch, "
"0","                         family = binomial(link = 'logit'))"
"0","summary(fit_imp_stoch)"
"1","
Call:
"
"1","glm(formula = health_good ~ health_cover + bmi + age, family = binomial(link = ""logit""), 
    data = risk_imp_stoch)"
"1","

"
"1","Deviance Residuals: 
"
"1","    Min  "
"1","     1Q  "
"1"," Median  "
"1","     3Q  "
"1","    Max  "
"1","
"
"1","-2.1929  "
"1"," 0.3360  "
"1"," 0.6318  "
"1"," 0.7645  "
"1"," 1.3918  "
"1","
"
"1","
Coefficients:
"
"1","            "
"1","  Estimate"
"1"," Std. Error"
"1"," z value"
"1"," Pr(>|z|)"
"1","    "
"1","
(Intercept) "
"1","  3.543718"
"1","   0.947807"
"1","   3.739"
"1"," 0.000185"
"1"," ***"
"1","
health_cover"
"1","  0.768918"
"1","   0.475212"
"1","   1.618"
"1"," 0.105652"
"1","    "
"1","
bmi         "
"1"," -0.051065"
"1","   0.020550"
"1","  -2.485"
"1"," 0.012959"
"1"," *  "
"1","
age         "
"1"," -0.027900"
"1","   0.009788"
"1","  -2.850"
"1"," 0.004368"
"1"," ** "
"1","
"
"1","---
Signif. codes:  "
"1","0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1"
"1","
"
"1","
(Dispersion parameter for "
"1","binomial"
"1"," family taken to be "
"1","1"
"1",")

"
"1","    Null deviance: 274.99  on 244  degrees of freedom
"
"1","Residual deviance: 259.51  on 241  degrees of freedom
"
"1","AIC: "
"1","267.51"
"1","

"
"1","Number of Fisher Scoring iterations: "
"1","4"
"1","
"
"1","
"
