"0","risk_imp_reg <- risk_MAR "
"0","df_cc <- risk_MAR[complete.cases(risk_MAR) , ] #Subset complete cases (cc)"
"0","#BMI: Regression Imputation "
"0","Ry <- as.numeric(!is.na(risk_MAR$bmi))# Missing data indicator"
"0","bmi_miss <- risk_MAR[Ry == 0 , ] #Subset rows with missing BMI values"
"0","mod_reg_imp <- lm(bmi ~ age + health_good + health_cover, data = df_cc) #Run model on cc data"
"0","bmi_imp_reg <- predict(mod_reg_imp, newdata = bmi_miss) #Use model to predict missing values"
"0","risk_imp_reg$bmi[Ry ==0] <- bmi_imp_reg  #Replace missing values"
"0","#HEALTH INSURANCE COVERAGE: Regression Imputation "
"0","Ry <- as.numeric(!is.na(risk_MAR$health_cover)) # Missing data indicator"
"0","health_cover_miss <- risk_imp_reg[Ry == 0 , ] #Subset rows with missing HEALTH_COVER values"
"0","health_cover_mod <- glm(health_cover ~ age + bmi + health_good, "
"0","                        data = df_cc,"
"0","                        family = binomial(link = 'logit')) #Fit model on cc data"
"0","health_cover_probs <- predict(health_cover_mod, "
"0","                              newdata = health_cover_miss,"
"0","                              type = 'response') #Predict Probability for missing data"
"0","heath_cover_imp_reg <-  as.integer(round(health_cover_probs)) #Round probs to 0/1"
"0","risk_imp_reg$health_cover[Ry == 0] <- heath_cover_imp_reg  #Replace missing values"
"0","#GOOD HEALTH: Regression Imputation "
"0","Ry <- as.numeric(!is.na(risk_MAR$health_good)) # Missing data indicator"
"0","health_good_miss <- risk_imp_reg[Ry == 0 , ] #Subset rows with missing HEALTH_COVER values"
"0","health_good_mod <- glm(health_good ~ age + bmi + health_cover, "
"0","                        data = df_cc,"
"0","                        family = binomial(link = 'logit')) #Fit model on cc data"
"0","health_good_probs <- predict(health_good_mod, "
"0","                              newdata = health_good_miss,"
"0","                              type = 'response') #Predict Probability for missing data"
"0","heath_good_imp_reg <-  as.integer(health_good_probs) #Round probs to 0/1"
"0","risk_imp_reg$health_good[Ry == 0] <- heath_good_imp_reg  #Replace missing COVER values"
"0","head(risk_imp_reg, n = 30)"
